#include <stdio.h>
#include <math.h>

#define MAX_HISTORY 100

// Function to calculate factorial
long long factorial(int n) {
    if(n < 0) return -1; // error
    long long fact = 1;
    for(int i=1; i<=n; i++)
        fact *= i;
    return fact;
}

// Convert degrees to radians
double deg2rad(double deg) {
    return deg * (M_PI / 180.0);
}

int main() {
    int choice;
    double num1, num2, result = 0;
    double memory = 0;
    int historyCount = 0;
    char operations[MAX_HISTORY][150];

    printf("Welcome to Utkarsh (Parth) Calculations - Ultimate Scientific Calculator!\n");

    do {
        printf("\nSelect an operation:\n");
        printf("1. Addition (+)\n");
        printf("2. Subtraction (-)\n");
        printf("3. Multiplication (*)\n");
        printf("4. Division (/)\n");
        printf("5. Percentage (%%)\n");
        printf("6. Power (^)\n");
        printf("7. Square Root (√)\n");
        printf("8. Factorial (!)\n");
        printf("9. sin(x) [degrees]\n");
        printf("10. cos(x) [degrees]\n");
        printf("11. tan(x) [degrees]\n");
        printf("12. ln(x) [natural log]\n");
        printf("13. log10(x)\n");
        printf("14. Memory Store (M = last result)\n");
        printf("15. Memory Recall (MR)\n");
        printf("16. Show Calculation History\n");
        printf("17. Exit\n");
        printf("Enter your choice (1-17): ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: // Addition
                printf("Enter first number: ");
                scanf("%lf", &num1);
                printf("Enter second number: ");
                scanf("%lf", &num2);
                result = num1 + num2;
                printf("Result: %.6lf + %.6lf = %.6lf\n", num1, num2, result);
                sprintf(operations[historyCount++], "%.6lf + %.6lf = %.6lf", num1, num2, result);
                break;
            case 2: // Subtraction
                printf("Enter first number: ");
                scanf("%lf", &num1);
                printf("Enter second number: ");
                scanf("%lf", &num2);
                result = num1 - num2;
                printf("Result: %.6lf - %.6lf = %.6lf\n", num1, num2, result);
                sprintf(operations[historyCount++], "%.6lf - %.6lf = %.6lf", num1, num2, result);
                break;
            case 3: // Multiplication
                printf("Enter first number: ");
                scanf("%lf", &num1);
                printf("Enter second number: ");
                scanf("%lf", &num2);
                result = num1 * num2;
                printf("Result: %.6lf * %.6lf = %.6lf\n", num1, num2, result);
                sprintf(operations[historyCount++], "%.6lf * %.6lf = %.6lf", num1, num2, result);
                break;
            case 4: // Division
                printf("Enter first number: ");
                scanf("%lf", &num1);
                printf("Enter second number: ");
                scanf("%lf", &num2);
                if(num2 == 0) {
                    printf("Error: Division by zero!\n");
                    sprintf(operations[historyCount++], "%.6lf / %.6lf = ERROR", num1, num2);
                } else {
                    result = num1 / num2;
                    printf("Result: %.6lf / %.6lf = %.6lf\n", num1, num2, result);
                    sprintf(operations[historyCount++], "%.6lf / %.6lf = %.6lf", num1, num2, result);
                }
                break;
            case 5: // Percentage
                printf("Enter percentage value: ");
                scanf("%lf", &num1);
                printf("Enter number to calculate percentage of: ");
                scanf("%lf", &num2);
                result = (num1 / 100.0) * num2;
                printf("Result: %.6lf%% of %.6lf = %.6lf\n", num1, num2, result);
                sprintf(operations[historyCount++], "%.6lf%% of %.6lf = %.6lf", num1, num2, result);
                break;
            case 6: // Power
                printf("Enter base: ");
                scanf("%lf", &num1);
                printf("Enter exponent: ");
                scanf("%lf", &num2);
                result = pow(num1, num2);
                printf("Result: %.6lf ^ %.6lf = %.6lf\n", num1, num2, result);
                sprintf(operations[historyCount++], "%.6lf ^ %.6lf = %.6lf", num1, num2, result);
                break;
            case 7: // Square root
                printf("Enter number: ");
                scanf("%lf", &num1);
                if(num1 < 0) {
                    printf("Error: Cannot calculate square root of negative number!\n");
                    sprintf(operations[historyCount++], "√%.6lf = ERROR", num1);
                } else {
                    result = sqrt(num1);
                    printf("Result: √%.6lf = %.6lf\n", num1, result);
                    sprintf(operations[historyCount++], "√%.6lf = %.6lf", num1, result);
                }
                break;
            case 8: // Factorial
                printf("Enter an integer: ");
                scanf("%lf", &num1);
                if(num1 < 0 || (int)num1 != num1) {
                    printf("Error: Factorial only for non-negative integers!\n");
                    sprintf(operations[historyCount++], "%.6lf! = ERROR", num1);
                } else {
                    result = factorial((int)num1);
                    printf("Result: %.0lf! = %.0lf\n", num1, result);
                    sprintf(operations[historyCount++], "%.0lf! = %.0lf", num1, result);
                }
                break;
            case 9: // sin(x)
                printf("Enter angle in degrees: ");
                scanf("%lf", &num1);
                result = sin(deg2rad(num1));
                printf("Result: sin(%.6lf°) = %.6lf\n", num1, result);
                sprintf(operations[historyCount++], "sin(%.6lf°) = %.6lf", num1, result);
                break;
            case 10: // cos(x)
                printf("Enter angle in degrees: ");
                scanf("%lf", &num1);
                result = cos(deg2rad(num1));
                printf("Result: cos(%.6lf°) = %.6lf\n", num1, result);
                sprintf(operations[historyCount++], "cos(%.6lf°) = %.6lf", num1, result);
                break;
            case 11: // tan(x)
                printf("Enter angle in degrees: ");
                scanf("%lf", &num1);
                if(fmod(num1,180) == 90) {
                    printf("Error: tan(%.6lf°) is undefined!\n", num1);
                    sprintf(operations[historyCount++], "tan(%.6lf°) = ERROR", num1);
                } else {
                    result = tan(deg2rad(num1));
                    printf("Result: tan(%.6lf°) = %.6lf\n", num1, result);
                    sprintf(operations[historyCount++], "tan(%.6lf°) = %.6lf", num1, result);
                }
                break;
            case 12: // ln(x)
                printf("Enter number: ");
                scanf("%lf", &num1);
                if(num1 <= 0) {
                    printf("Error: ln(x) undefined for x <= 0\n");
                    sprintf(operations[historyCount++], "ln(%.6lf) = ERROR", num1);
                } else {
                    result = log(num1);
                    printf("Result: ln(%.6lf) = %.6lf\n", num1, result);
                    sprintf(operations[historyCount++], "ln(%.6lf) = %.6lf", num1, result);
                }
                break;
            case 13: // log10(x)
                printf("Enter number: ");
                scanf("%lf", &num1);
                if(num1 <= 0) {
                    printf("Error: log10(x) undefined for x <= 0\n");
                    sprintf(operations[historyCount++], "log10(%.6lf) = ERROR", num1);
                } else {
                    result = log10(num1);
                    printf("Result: log10(%.6lf) = %.6lf\n", num1, result);
                    sprintf(operations[historyCount++], "log10(%.6lf) = %.6lf", num1, result);
                }
                break;
            case 14: // Memory store
                memory = result;
                printf("Memory stored: %.6lf\n", memory);
                break;
            case 15: // Memory recall
                printf("Memory Recall: %.6lf\n", memory);
                break;
            case 16: // History
                if(historyCount == 0) {
                    printf("No calculations done yet.\n");
                } else {
                    printf("\n--- Calculation History ---\n");
                    for(int i=0; i<historyCount; i++)
                        printf("%d. %s\n", i+1, operations[i]);
                    printf("---------------------------\n");
                }
                break;
            case 17: // Exit
                printf("Thank you for using Utkarsh (Parth) Calculations! Goodbye!\n");
                break;
            default:
                printf("Invalid choice! Please select 1-17.\n");
        }

    } while(choice != 17);

    return 0;
}
